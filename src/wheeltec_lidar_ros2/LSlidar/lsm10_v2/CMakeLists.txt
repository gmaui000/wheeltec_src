cmake_minimum_required(VERSION 3.5)

project(lsm10_v2)

# Default to C++14
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()


find_package(ament_cmake REQUIRED)
find_package(rosidl_default_generators REQUIRED)

find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(lsm10_v2 REQUIRED)
find_package(Boost 1.65.1 REQUIRED COMPONENTS system filesystem thread)
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
endif()

rosidl_generate_interfaces(${PROJECT_NAME}
  "msg/Difop.msg"
  DEPENDENCIES std_msgs
  ADD_LINTER_TESTS
)

include_directories(
  include
  src
  ${catkin_INCLUDE_DIRS}
  ${Eigen3_INCLUDE_DIRS} 
)

ament_export_dependencies(rosidl_default_runtime)

add_executable(LSM10 src/lsiosr.cpp src/lsm10.cpp)

include_directories(LSM10 ${Boost_INCLUDE_DIRS})
link_directories(LSM10 ${Boost_LIBRARY_DIRS})
target_link_libraries(LSM10 ${Boost_LIBRARIES})

ament_target_dependencies(LSM10 rclcpp rclpy  std_msgs  sensor_msgs lsm10_v2 Boost)



target_link_libraries(LSM10 ${Boost_PROGRAM_OPTIONS_LIBRARY})

install(TARGETS
  LSM10
  DESTINATION lib/${PROJECT_NAME}
)

install(
  DIRECTORY launch 
  DESTINATION share/${PROJECT_NAME}
)


ament_package()
